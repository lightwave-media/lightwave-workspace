name: Deploy to Staging

on:
  push:
    branches: [develop, staging]
    paths:
      - 'Frontend/lightwave-media-site/**'
  workflow_dispatch:

env:
  NODE_VERSION: '20'
  PNPM_VERSION: '9'
  CLOUDFLARE_ENV: 'staging'

jobs:
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./Frontend/lightwave-media-site

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build and deploy to staging
        run: |
          CLOUDFLARE_ENV=staging pnpm run deploy:app
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: Run staging database migrations
        run: |
          CLOUDFLARE_ENV=staging pnpm run deploy:database
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          PAYLOAD_SECRET: ${{ secrets.PAYLOAD_SECRET }}

      - name: Get staging URL
        run: |
          echo "ðŸš€ Staging deployment complete!"
          echo "ðŸ”— Staging URL: https://lightwave-media-site-staging.jeschaeffer.workers.dev"
          echo "ðŸ”§ Admin Panel: https://lightwave-media-site-staging.jeschaeffer.workers.dev/admin"
